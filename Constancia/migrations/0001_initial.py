# Generated by Django 4.2.3 on 2023-11-28 21:24

import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cargos',
            fields=[
                ('id_cargos', models.AutoField(primary_key=True, serialize=False)),
                ('Cedula_Cargos', models.BigIntegerField()),
                ('Nombres_Cargos', models.CharField(max_length=50)),
                ('Apellidos_Cargos', models.CharField(max_length=50)),
                ('Telefono_Cargos', models.BigIntegerField()),
                ('Fecha_Ingreso_Cargos', models.DateField(blank=True, null=True)),
                ('Fecha_Egreso_Cargos', models.DateField(blank=True, null=True)),
                ('Cargo_Cargos', models.CharField(choices=[('Director/a', 'Director/a'), ('Coordinador de control de estudios y evaluacion', 'Coordinador de control de estudios y evaluacion')], max_length=50)),
            ],
            options={
                'unique_together': {('Cargo_Cargos',)},
            },
        ),
        migrations.CreateModel(
            name='Estudiante',
            fields=[
                ('id_estudiante', models.AutoField(primary_key=True, serialize=False)),
                ('Cedula_Estudiante', models.BigIntegerField()),
                ('Nombres_Estudiante', models.CharField(max_length=50)),
                ('Apellidos_Estudiante', models.CharField(max_length=50)),
                ('Fecha_Nacimiento_Estudiante', models.DateField()),
                ('Genero_Estudiante', models.CharField(choices=[('Femenino', 'Femenino'), ('Masculino', 'Masculino')], max_length=10)),
                ('Lugar_Nacimiento_Estudiante', models.CharField(max_length=50)),
                ('Entidad_Federal_Estudiante', models.CharField(choices=[('Portuguesa', 'Portuguesa'), ('Barinas', 'Barinas'), ('Lara', 'Lara'), ('Caracas', 'Caracas')], max_length=20)),
                ('Fecha_Registro_Estudiante', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Grado',
            fields=[
                ('ID_Grado', models.AutoField(primary_key=True, serialize=False)),
                ('Ano_Grado', models.CharField(choices=[('Primero', 'Primero'), ('Segundo', 'Segundo'), ('Tercero', 'Tercero'), ('Cuarto', 'Cuarto'), ('Quinto', 'Quinto')], max_length=10)),
                ('Seccion_Grado', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D')], max_length=1)),
            ],
            options={
                'unique_together': {('Ano_Grado', 'Seccion_Grado')},
            },
        ),
        migrations.CreateModel(
            name='InscripcionEstudiante',
            fields=[
                ('id_Inscripcion_Estudiante', models.AutoField(primary_key=True, serialize=False)),
                ('Condicion_Inscripcion', models.CharField(choices=[('Regular', 'Regular'), ('Regular con materia pendiente', 'Regular con materia pendiente'), ('Repetiente', 'Repetiente'), ('Bachiller no cursante', 'Bachiller no cursante')], max_length=30)),
                ('Ano_Escolar', models.CharField(choices=[('2023-2024', '2023-2024'), ('2024-2025', '2024-2025')], max_length=20)),
                ('Fecha_Inscripcion', models.DateTimeField()),
                ('Cedula_Estudiante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Constancia.estudiante')),
            ],
        ),
        migrations.CreateModel(
            name='Institucion',
            fields=[
                ('id_Institucion', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('Codigo_Institucion', models.CharField(max_length=50)),
                ('Nombre_Institucion', models.CharField(max_length=100)),
                ('Ubicacion_Institucion', models.CharField(max_length=100)),
                ('Correo_Institucion', models.EmailField(max_length=50)),
                ('Telefono_Institucion', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Materia',
            fields=[
                ('id_Materia', models.AutoField(primary_key=True, serialize=False)),
                ('Nombre_Materia', models.CharField(max_length=50)),
            ],
            options={
                'unique_together': {('Nombre_Materia',)},
            },
        ),
        migrations.CreateModel(
            name='Representante',
            fields=[
                ('id_representante', models.AutoField(primary_key=True, serialize=False)),
                ('Cedula_Representante', models.BigIntegerField()),
                ('Nombres_Representante', models.CharField(max_length=50)),
                ('Apellidos_Representante', models.CharField(max_length=50)),
                ('Fecha_Nacimiento_Representante', models.DateField()),
                ('Genero_Representante', models.CharField(choices=[('Femenino', 'Femenino'), ('Masculino', 'Masculino')], max_length=10)),
                ('Parentesco_Representante', models.CharField(choices=[('Padre', 'Padre'), ('Madre', 'Madre'), ('Tio', 'Tio'), ('Tia', 'Tia')], max_length=10)),
                ('Lugar_Nacimiento_Representante', models.CharField(max_length=50)),
                ('Entidad_Federal_Representante', models.CharField(choices=[('Portuguesa', 'Portuguesa'), ('Barinas', 'Barinas'), ('Lara', 'Lara'), ('Caracas', 'Caracas')], max_length=20)),
                ('Direccion_Habitacion_Representante', models.CharField(max_length=255)),
                ('Telefono1_Representante', models.BigIntegerField()),
                ('Telefono2_Representante', models.BigIntegerField(blank=True, null=True)),
                ('Correo_Electronico_Representante', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('Observacion_Representante', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('Nombres_Completo', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MateriaSeccion',
            fields=[
                ('Id_Materia_Seccion', models.AutoField(primary_key=True, serialize=False)),
                ('Id_Grado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Constancia.grado')),
                ('Materias', models.ManyToManyField(related_name='materias_all', to='Constancia.materia')),
            ],
            options={
                'unique_together': {('Id_Grado',)},
            },
        ),
        migrations.CreateModel(
            name='InscripcionMateriaRepitiente',
            fields=[
                ('id_Inscripcion_Repitiente', models.AutoField(primary_key=True, serialize=False)),
                ('Materias_pendientes', models.ManyToManyField(related_name='materias_pendientes22', to='Constancia.materia')),
                ('id_Inscripcion_Estudiante', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Constancia.inscripcionestudiante')),
            ],
        ),
        migrations.CreateModel(
            name='InscripcionMateriaPendiente',
            fields=[
                ('id_Inscripcion_Pendiente', models.AutoField(primary_key=True, serialize=False)),
                ('Id_Grado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='GRADO2', to='Constancia.grado')),
                ('id_Inscripcion_Estudiante', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Constancia.inscripcionestudiante')),
                ('materias_pendientes', models.ManyToManyField(related_name='materias_pendientes', to='Constancia.materia')),
            ],
        ),
        migrations.CreateModel(
            name='InscripcionMateriaBachillerNoCursante',
            fields=[
                ('id_Inscripcion_Regular', models.AutoField(primary_key=True, serialize=False)),
                ('id_Inscripcion_Estudiante', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Constancia.inscripcionestudiante')),
                ('materias_pendientes', models.ManyToManyField(related_name='materias_pendientesX', to='Constancia.materia')),
            ],
        ),
        migrations.AddField(
            model_name='inscripcionestudiante',
            name='Id_Materia_Seccion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Constancia.materiaseccion'),
        ),
        migrations.AddField(
            model_name='inscripcionestudiante',
            name='id_Institucion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Constancia.institucion'),
        ),
        migrations.AddField(
            model_name='inscripcionestudiante',
            name='id_cargos',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Constancia.cargos'),
        ),
        migrations.AddField(
            model_name='estudiante',
            name='Cedula_Representante',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Constancia.representante'),
        ),
        migrations.AlterUniqueTogether(
            name='estudiante',
            unique_together={('Cedula_Estudiante',)},
        ),
    ]
